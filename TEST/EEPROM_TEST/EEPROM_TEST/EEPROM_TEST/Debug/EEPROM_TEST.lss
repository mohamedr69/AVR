
EEPROM_TEST.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000440  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000494  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000494  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000004c4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000f8  00000000  00000000  00000500  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000156f  00000000  00000000  000005f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008aa  00000000  00000000  00001b67  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000816  00000000  00000000  00002411  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000268  00000000  00000000  00002c28  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000005e9  00000000  00000000  00002e90  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00001051  00000000  00000000  00003479  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000b8  00000000  00000000  000044ca  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e0 e4       	ldi	r30, 0x40	; 64
  68:	f4 e0       	ldi	r31, 0x04	; 4
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 05 02 	call	0x40a	; 0x40a <main>
  7a:	0c 94 1e 02 	jmp	0x43c	; 0x43c <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <DIO_vidSetPinMode>:
		Output = GET_BIT(PIND,enuPIN);
		break;
		default:break;
	}
	return Output;
}
  82:	81 30       	cpi	r24, 0x01	; 1
  84:	01 f1       	breq	.+64     	; 0xc6 <DIO_vidSetPinMode+0x44>
  86:	30 f0       	brcs	.+12     	; 0x94 <DIO_vidSetPinMode+0x12>
  88:	82 30       	cpi	r24, 0x02	; 2
  8a:	b1 f1       	breq	.+108    	; 0xf8 <DIO_vidSetPinMode+0x76>
  8c:	83 30       	cpi	r24, 0x03	; 3
  8e:	09 f4       	brne	.+2      	; 0x92 <DIO_vidSetPinMode+0x10>
  90:	4c c0       	rjmp	.+152    	; 0x12a <DIO_vidSetPinMode+0xa8>
  92:	08 95       	ret
  94:	44 23       	and	r20, r20
  96:	59 f0       	breq	.+22     	; 0xae <DIO_vidSetPinMode+0x2c>
  98:	2a b3       	in	r18, 0x1a	; 26
  9a:	81 e0       	ldi	r24, 0x01	; 1
  9c:	90 e0       	ldi	r25, 0x00	; 0
  9e:	02 c0       	rjmp	.+4      	; 0xa4 <DIO_vidSetPinMode+0x22>
  a0:	88 0f       	add	r24, r24
  a2:	99 1f       	adc	r25, r25
  a4:	6a 95       	dec	r22
  a6:	e2 f7       	brpl	.-8      	; 0xa0 <DIO_vidSetPinMode+0x1e>
  a8:	82 2b       	or	r24, r18
  aa:	8a bb       	out	0x1a, r24	; 26
  ac:	08 95       	ret
  ae:	2a b3       	in	r18, 0x1a	; 26
  b0:	81 e0       	ldi	r24, 0x01	; 1
  b2:	90 e0       	ldi	r25, 0x00	; 0
  b4:	02 c0       	rjmp	.+4      	; 0xba <DIO_vidSetPinMode+0x38>
  b6:	88 0f       	add	r24, r24
  b8:	99 1f       	adc	r25, r25
  ba:	6a 95       	dec	r22
  bc:	e2 f7       	brpl	.-8      	; 0xb6 <DIO_vidSetPinMode+0x34>
  be:	80 95       	com	r24
  c0:	82 23       	and	r24, r18
  c2:	8a bb       	out	0x1a, r24	; 26
  c4:	08 95       	ret
  c6:	44 23       	and	r20, r20
  c8:	59 f0       	breq	.+22     	; 0xe0 <DIO_vidSetPinMode+0x5e>
  ca:	27 b3       	in	r18, 0x17	; 23
  cc:	81 e0       	ldi	r24, 0x01	; 1
  ce:	90 e0       	ldi	r25, 0x00	; 0
  d0:	02 c0       	rjmp	.+4      	; 0xd6 <DIO_vidSetPinMode+0x54>
  d2:	88 0f       	add	r24, r24
  d4:	99 1f       	adc	r25, r25
  d6:	6a 95       	dec	r22
  d8:	e2 f7       	brpl	.-8      	; 0xd2 <DIO_vidSetPinMode+0x50>
  da:	82 2b       	or	r24, r18
  dc:	87 bb       	out	0x17, r24	; 23
  de:	08 95       	ret
  e0:	27 b3       	in	r18, 0x17	; 23
  e2:	81 e0       	ldi	r24, 0x01	; 1
  e4:	90 e0       	ldi	r25, 0x00	; 0
  e6:	02 c0       	rjmp	.+4      	; 0xec <DIO_vidSetPinMode+0x6a>
  e8:	88 0f       	add	r24, r24
  ea:	99 1f       	adc	r25, r25
  ec:	6a 95       	dec	r22
  ee:	e2 f7       	brpl	.-8      	; 0xe8 <DIO_vidSetPinMode+0x66>
  f0:	80 95       	com	r24
  f2:	82 23       	and	r24, r18
  f4:	87 bb       	out	0x17, r24	; 23
  f6:	08 95       	ret
  f8:	44 23       	and	r20, r20
  fa:	59 f0       	breq	.+22     	; 0x112 <DIO_vidSetPinMode+0x90>
  fc:	24 b3       	in	r18, 0x14	; 20
  fe:	81 e0       	ldi	r24, 0x01	; 1
 100:	90 e0       	ldi	r25, 0x00	; 0
 102:	02 c0       	rjmp	.+4      	; 0x108 <DIO_vidSetPinMode+0x86>
 104:	88 0f       	add	r24, r24
 106:	99 1f       	adc	r25, r25
 108:	6a 95       	dec	r22
 10a:	e2 f7       	brpl	.-8      	; 0x104 <DIO_vidSetPinMode+0x82>
 10c:	82 2b       	or	r24, r18
 10e:	84 bb       	out	0x14, r24	; 20
 110:	08 95       	ret
 112:	24 b3       	in	r18, 0x14	; 20
 114:	81 e0       	ldi	r24, 0x01	; 1
 116:	90 e0       	ldi	r25, 0x00	; 0
 118:	02 c0       	rjmp	.+4      	; 0x11e <DIO_vidSetPinMode+0x9c>
 11a:	88 0f       	add	r24, r24
 11c:	99 1f       	adc	r25, r25
 11e:	6a 95       	dec	r22
 120:	e2 f7       	brpl	.-8      	; 0x11a <DIO_vidSetPinMode+0x98>
 122:	80 95       	com	r24
 124:	82 23       	and	r24, r18
 126:	84 bb       	out	0x14, r24	; 20
 128:	08 95       	ret
 12a:	44 23       	and	r20, r20
 12c:	59 f0       	breq	.+22     	; 0x144 <DIO_vidSetPinMode+0xc2>
 12e:	21 b3       	in	r18, 0x11	; 17
 130:	81 e0       	ldi	r24, 0x01	; 1
 132:	90 e0       	ldi	r25, 0x00	; 0
 134:	02 c0       	rjmp	.+4      	; 0x13a <DIO_vidSetPinMode+0xb8>
 136:	88 0f       	add	r24, r24
 138:	99 1f       	adc	r25, r25
 13a:	6a 95       	dec	r22
 13c:	e2 f7       	brpl	.-8      	; 0x136 <DIO_vidSetPinMode+0xb4>
 13e:	82 2b       	or	r24, r18
 140:	81 bb       	out	0x11, r24	; 17
 142:	08 95       	ret
 144:	21 b3       	in	r18, 0x11	; 17
 146:	81 e0       	ldi	r24, 0x01	; 1
 148:	90 e0       	ldi	r25, 0x00	; 0
 14a:	02 c0       	rjmp	.+4      	; 0x150 <DIO_vidSetPinMode+0xce>
 14c:	88 0f       	add	r24, r24
 14e:	99 1f       	adc	r25, r25
 150:	6a 95       	dec	r22
 152:	e2 f7       	brpl	.-8      	; 0x14c <DIO_vidSetPinMode+0xca>
 154:	80 95       	com	r24
 156:	82 23       	and	r24, r18
 158:	81 bb       	out	0x11, r24	; 17
 15a:	08 95       	ret

0000015c <DIO_vidSetPinValue>:
 15c:	81 30       	cpi	r24, 0x01	; 1
 15e:	01 f1       	breq	.+64     	; 0x1a0 <DIO_vidSetPinValue+0x44>
 160:	30 f0       	brcs	.+12     	; 0x16e <DIO_vidSetPinValue+0x12>
 162:	82 30       	cpi	r24, 0x02	; 2
 164:	b1 f1       	breq	.+108    	; 0x1d2 <DIO_vidSetPinValue+0x76>
 166:	83 30       	cpi	r24, 0x03	; 3
 168:	09 f4       	brne	.+2      	; 0x16c <DIO_vidSetPinValue+0x10>
 16a:	4c c0       	rjmp	.+152    	; 0x204 <DIO_vidSetPinValue+0xa8>
 16c:	08 95       	ret
 16e:	44 23       	and	r20, r20
 170:	59 f0       	breq	.+22     	; 0x188 <DIO_vidSetPinValue+0x2c>
 172:	2b b3       	in	r18, 0x1b	; 27
 174:	81 e0       	ldi	r24, 0x01	; 1
 176:	90 e0       	ldi	r25, 0x00	; 0
 178:	02 c0       	rjmp	.+4      	; 0x17e <DIO_vidSetPinValue+0x22>
 17a:	88 0f       	add	r24, r24
 17c:	99 1f       	adc	r25, r25
 17e:	6a 95       	dec	r22
 180:	e2 f7       	brpl	.-8      	; 0x17a <DIO_vidSetPinValue+0x1e>
 182:	82 2b       	or	r24, r18
 184:	8b bb       	out	0x1b, r24	; 27
 186:	08 95       	ret
 188:	2b b3       	in	r18, 0x1b	; 27
 18a:	81 e0       	ldi	r24, 0x01	; 1
 18c:	90 e0       	ldi	r25, 0x00	; 0
 18e:	02 c0       	rjmp	.+4      	; 0x194 <DIO_vidSetPinValue+0x38>
 190:	88 0f       	add	r24, r24
 192:	99 1f       	adc	r25, r25
 194:	6a 95       	dec	r22
 196:	e2 f7       	brpl	.-8      	; 0x190 <DIO_vidSetPinValue+0x34>
 198:	80 95       	com	r24
 19a:	82 23       	and	r24, r18
 19c:	8b bb       	out	0x1b, r24	; 27
 19e:	08 95       	ret
 1a0:	44 23       	and	r20, r20
 1a2:	59 f0       	breq	.+22     	; 0x1ba <DIO_vidSetPinValue+0x5e>
 1a4:	28 b3       	in	r18, 0x18	; 24
 1a6:	81 e0       	ldi	r24, 0x01	; 1
 1a8:	90 e0       	ldi	r25, 0x00	; 0
 1aa:	02 c0       	rjmp	.+4      	; 0x1b0 <DIO_vidSetPinValue+0x54>
 1ac:	88 0f       	add	r24, r24
 1ae:	99 1f       	adc	r25, r25
 1b0:	6a 95       	dec	r22
 1b2:	e2 f7       	brpl	.-8      	; 0x1ac <DIO_vidSetPinValue+0x50>
 1b4:	82 2b       	or	r24, r18
 1b6:	88 bb       	out	0x18, r24	; 24
 1b8:	08 95       	ret
 1ba:	28 b3       	in	r18, 0x18	; 24
 1bc:	81 e0       	ldi	r24, 0x01	; 1
 1be:	90 e0       	ldi	r25, 0x00	; 0
 1c0:	02 c0       	rjmp	.+4      	; 0x1c6 <DIO_vidSetPinValue+0x6a>
 1c2:	88 0f       	add	r24, r24
 1c4:	99 1f       	adc	r25, r25
 1c6:	6a 95       	dec	r22
 1c8:	e2 f7       	brpl	.-8      	; 0x1c2 <DIO_vidSetPinValue+0x66>
 1ca:	80 95       	com	r24
 1cc:	82 23       	and	r24, r18
 1ce:	88 bb       	out	0x18, r24	; 24
 1d0:	08 95       	ret
 1d2:	44 23       	and	r20, r20
 1d4:	59 f0       	breq	.+22     	; 0x1ec <DIO_vidSetPinValue+0x90>
 1d6:	25 b3       	in	r18, 0x15	; 21
 1d8:	81 e0       	ldi	r24, 0x01	; 1
 1da:	90 e0       	ldi	r25, 0x00	; 0
 1dc:	02 c0       	rjmp	.+4      	; 0x1e2 <DIO_vidSetPinValue+0x86>
 1de:	88 0f       	add	r24, r24
 1e0:	99 1f       	adc	r25, r25
 1e2:	6a 95       	dec	r22
 1e4:	e2 f7       	brpl	.-8      	; 0x1de <DIO_vidSetPinValue+0x82>
 1e6:	82 2b       	or	r24, r18
 1e8:	85 bb       	out	0x15, r24	; 21
 1ea:	08 95       	ret
 1ec:	25 b3       	in	r18, 0x15	; 21
 1ee:	81 e0       	ldi	r24, 0x01	; 1
 1f0:	90 e0       	ldi	r25, 0x00	; 0
 1f2:	02 c0       	rjmp	.+4      	; 0x1f8 <DIO_vidSetPinValue+0x9c>
 1f4:	88 0f       	add	r24, r24
 1f6:	99 1f       	adc	r25, r25
 1f8:	6a 95       	dec	r22
 1fa:	e2 f7       	brpl	.-8      	; 0x1f4 <DIO_vidSetPinValue+0x98>
 1fc:	80 95       	com	r24
 1fe:	82 23       	and	r24, r18
 200:	85 bb       	out	0x15, r24	; 21
 202:	08 95       	ret
 204:	44 23       	and	r20, r20
 206:	59 f0       	breq	.+22     	; 0x21e <DIO_vidSetPinValue+0xc2>
 208:	22 b3       	in	r18, 0x12	; 18
 20a:	81 e0       	ldi	r24, 0x01	; 1
 20c:	90 e0       	ldi	r25, 0x00	; 0
 20e:	02 c0       	rjmp	.+4      	; 0x214 <DIO_vidSetPinValue+0xb8>
 210:	88 0f       	add	r24, r24
 212:	99 1f       	adc	r25, r25
 214:	6a 95       	dec	r22
 216:	e2 f7       	brpl	.-8      	; 0x210 <DIO_vidSetPinValue+0xb4>
 218:	82 2b       	or	r24, r18
 21a:	82 bb       	out	0x12, r24	; 18
 21c:	08 95       	ret
 21e:	22 b3       	in	r18, 0x12	; 18
 220:	81 e0       	ldi	r24, 0x01	; 1
 222:	90 e0       	ldi	r25, 0x00	; 0
 224:	02 c0       	rjmp	.+4      	; 0x22a <DIO_vidSetPinValue+0xce>
 226:	88 0f       	add	r24, r24
 228:	99 1f       	adc	r25, r25
 22a:	6a 95       	dec	r22
 22c:	e2 f7       	brpl	.-8      	; 0x226 <DIO_vidSetPinValue+0xca>
 22e:	80 95       	com	r24
 230:	82 23       	and	r24, r18
 232:	82 bb       	out	0x12, r24	; 18
 234:	08 95       	ret

00000236 <DIO_vidSetPort>:
void DIO_vidSetPort(_enuPORTx enuPORT,_enuMode enuMode){
	
	switch(enuPORT)
 236:	81 30       	cpi	r24, 0x01	; 1
 238:	69 f0       	breq	.+26     	; 0x254 <DIO_vidSetPort+0x1e>
 23a:	28 f0       	brcs	.+10     	; 0x246 <DIO_vidSetPort+0x10>
 23c:	82 30       	cpi	r24, 0x02	; 2
 23e:	89 f0       	breq	.+34     	; 0x262 <DIO_vidSetPort+0x2c>
 240:	83 30       	cpi	r24, 0x03	; 3
 242:	b1 f0       	breq	.+44     	; 0x270 <DIO_vidSetPort+0x3a>
 244:	08 95       	ret
	{
		case GPIOA:
			if(enuMode == Output){
 246:	61 30       	cpi	r22, 0x01	; 1
 248:	19 f4       	brne	.+6      	; 0x250 <DIO_vidSetPort+0x1a>
				DDRA = 0xff;
 24a:	8f ef       	ldi	r24, 0xFF	; 255
 24c:	8a bb       	out	0x1a, r24	; 26
 24e:	08 95       	ret
			}else{
				DDRA = 0x00;
 250:	1a ba       	out	0x1a, r1	; 26
 252:	08 95       	ret
			}
			break;
		case GPIOB:
			if(enuMode == Output){
 254:	61 30       	cpi	r22, 0x01	; 1
 256:	19 f4       	brne	.+6      	; 0x25e <DIO_vidSetPort+0x28>
				DDRB = 0xff;
 258:	8f ef       	ldi	r24, 0xFF	; 255
 25a:	87 bb       	out	0x17, r24	; 23
 25c:	08 95       	ret
			}else{
				DDRB = 0x00;
 25e:	17 ba       	out	0x17, r1	; 23
 260:	08 95       	ret
			}
			break;
		case GPIOC:
			if(enuMode == Output){
 262:	61 30       	cpi	r22, 0x01	; 1
 264:	19 f4       	brne	.+6      	; 0x26c <DIO_vidSetPort+0x36>
				DDRC = 0xff;
 266:	8f ef       	ldi	r24, 0xFF	; 255
 268:	84 bb       	out	0x14, r24	; 20
 26a:	08 95       	ret
			}else{
				DDRC = 0x00;
 26c:	14 ba       	out	0x14, r1	; 20
 26e:	08 95       	ret
			}
			break;
		case GPIOD:
			if(enuMode == Output){
 270:	61 30       	cpi	r22, 0x01	; 1
 272:	19 f4       	brne	.+6      	; 0x27a <DIO_vidSetPort+0x44>
				DDRD = 0xff;
 274:	8f ef       	ldi	r24, 0xFF	; 255
 276:	81 bb       	out	0x11, r24	; 17
 278:	08 95       	ret
			}else{
				DDRD = 0x00;
 27a:	11 ba       	out	0x11, r1	; 17
 27c:	08 95       	ret

0000027e <DIO_vidWritePort>:
	}
	
}
void DIO_vidWritePort(_enuPORTx enuPORT,u8 character){
	
		switch(enuPORT)
 27e:	81 30       	cpi	r24, 0x01	; 1
 280:	41 f0       	breq	.+16     	; 0x292 <DIO_vidWritePort+0x14>
 282:	28 f0       	brcs	.+10     	; 0x28e <DIO_vidWritePort+0x10>
 284:	82 30       	cpi	r24, 0x02	; 2
 286:	39 f0       	breq	.+14     	; 0x296 <DIO_vidWritePort+0x18>
 288:	83 30       	cpi	r24, 0x03	; 3
 28a:	39 f0       	breq	.+14     	; 0x29a <DIO_vidWritePort+0x1c>
 28c:	08 95       	ret
	{
		case GPIOA:
			PORTA = character;
 28e:	6b bb       	out	0x1b, r22	; 27
			break;
 290:	08 95       	ret
		case GPIOB:
			PORTB = character;
 292:	68 bb       	out	0x18, r22	; 24
			break;
 294:	08 95       	ret
		case GPIOC:
			PORTC = character;
 296:	65 bb       	out	0x15, r22	; 21
			break;
 298:	08 95       	ret
		case GPIOD:
			PORTD = character;
 29a:	62 bb       	out	0x12, r22	; 18
 29c:	08 95       	ret

0000029e <EEPROM_voidWriteData>:
#include "EEPROM_config.h"

void EEPROM_voidWriteData(u16 COPY_u16Address, u8 COPY_u8Data){
	

	EEARL = (u8)COPY_u16Address;
 29e:	8e bb       	out	0x1e, r24	; 30
	EEARH = (u8)(COPY_u16Address >> 8);
 2a0:	9f bb       	out	0x1f, r25	; 31
	EEDR = COPY_u8Data;
 2a2:	6d bb       	out	0x1d, r22	; 29
	SET_BIT(EECR,EEMWE);
 2a4:	8c b3       	in	r24, 0x1c	; 28
 2a6:	84 60       	ori	r24, 0x04	; 4
 2a8:	8c bb       	out	0x1c, r24	; 28
	SET_BIT(EECR,EEWE);
 2aa:	8c b3       	in	r24, 0x1c	; 28
 2ac:	82 60       	ori	r24, 0x02	; 2
 2ae:	8c bb       	out	0x1c, r24	; 28
	while(GET_BIT(EECR,EEWE) == 1);
 2b0:	e1 99       	sbic	0x1c, 1	; 28
 2b2:	fe cf       	rjmp	.-4      	; 0x2b0 <EEPROM_voidWriteData+0x12>

}
 2b4:	08 95       	ret

000002b6 <EEPROM_u8ReadData>:
u8 EEPROM_u8ReadData(u16 COPY_u16Address){
	EEARL = (u8)COPY_u16Address;
 2b6:	8e bb       	out	0x1e, r24	; 30
	EEARH = (u8)(COPY_u16Address >> 8);
 2b8:	9f bb       	out	0x1f, r25	; 31
	SET_BIT(EECR,EERE);
 2ba:	8c b3       	in	r24, 0x1c	; 28
 2bc:	81 60       	ori	r24, 0x01	; 1
 2be:	8c bb       	out	0x1c, r24	; 28
	return EEDR;
 2c0:	8d b3       	in	r24, 0x1d	; 29
	
}
 2c2:	08 95       	ret

000002c4 <LCD_vidEnablePulse>:
	DIO_vidSetPinValue(RSport,RSpin,Low);
	DIO_vidWritePort(Data,command);
	LCD_vidEnablePulse(Eport,Epin);
	
}
static void LCD_vidEnablePulse(_enuPORTx Eport,_enuPINx Epin){
 2c4:	cf 93       	push	r28
 2c6:	df 93       	push	r29
 2c8:	c8 2f       	mov	r28, r24
 2ca:	d6 2f       	mov	r29, r22
	DIO_vidSetPinValue(Eport,Epin,High);
 2cc:	41 e0       	ldi	r20, 0x01	; 1
 2ce:	0e 94 ae 00 	call	0x15c	; 0x15c <DIO_vidSetPinValue>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2d2:	8f e9       	ldi	r24, 0x9F	; 159
 2d4:	9f e0       	ldi	r25, 0x0F	; 15
 2d6:	01 97       	sbiw	r24, 0x01	; 1
 2d8:	f1 f7       	brne	.-4      	; 0x2d6 <LCD_vidEnablePulse+0x12>
 2da:	00 c0       	rjmp	.+0      	; 0x2dc <LCD_vidEnablePulse+0x18>
 2dc:	00 00       	nop
	_delay_ms(2);
	DIO_vidSetPinValue(Eport,Epin,Low);
 2de:	40 e0       	ldi	r20, 0x00	; 0
 2e0:	6d 2f       	mov	r22, r29
 2e2:	8c 2f       	mov	r24, r28
 2e4:	0e 94 ae 00 	call	0x15c	; 0x15c <DIO_vidSetPinValue>
}
 2e8:	df 91       	pop	r29
 2ea:	cf 91       	pop	r28
 2ec:	08 95       	ret

000002ee <LCD_vidWriteCommand>:
	
	LCD_vidWriteCommand(Data,RSport,RSpin,Eport,Epin,LCD_ENTRY_MODE);
	
}

void LCD_vidWriteCommand(_enuPORTx Data,_enuPORTx RSport,_enuPINx RSpin,_enuPORTx Eport,_enuPINx Epin,u8 command){
 2ee:	ef 92       	push	r14
 2f0:	0f 93       	push	r16
 2f2:	cf 93       	push	r28
 2f4:	df 93       	push	r29
 2f6:	d8 2f       	mov	r29, r24
 2f8:	86 2f       	mov	r24, r22
 2fa:	64 2f       	mov	r22, r20
 2fc:	c2 2f       	mov	r28, r18
	
	DIO_vidSetPinValue(RSport,RSpin,Low);
 2fe:	40 e0       	ldi	r20, 0x00	; 0
 300:	0e 94 ae 00 	call	0x15c	; 0x15c <DIO_vidSetPinValue>
	DIO_vidWritePort(Data,command);
 304:	6e 2d       	mov	r22, r14
 306:	8d 2f       	mov	r24, r29
 308:	0e 94 3f 01 	call	0x27e	; 0x27e <DIO_vidWritePort>
	LCD_vidEnablePulse(Eport,Epin);
 30c:	60 2f       	mov	r22, r16
 30e:	8c 2f       	mov	r24, r28
 310:	0e 94 62 01 	call	0x2c4	; 0x2c4 <LCD_vidEnablePulse>
	
}
 314:	df 91       	pop	r29
 316:	cf 91       	pop	r28
 318:	0f 91       	pop	r16
 31a:	ef 90       	pop	r14
 31c:	08 95       	ret

0000031e <LCD_vidInit8Bit>:
#include "LCD_config.h"

#define  F_CPU 8000000UL
#include "util/delay.h"

void LCD_vidInit8Bit(_enuPORTx Data,_enuPORTx RSport,_enuPINx RSpin,_enuPORTx Eport,_enuPINx Epin){
 31e:	df 92       	push	r13
 320:	ef 92       	push	r14
 322:	ff 92       	push	r15
 324:	0f 93       	push	r16
 326:	1f 93       	push	r17
 328:	cf 93       	push	r28
 32a:	df 93       	push	r29
 32c:	c8 2f       	mov	r28, r24
 32e:	d6 2f       	mov	r29, r22
 330:	14 2f       	mov	r17, r20
 332:	f2 2e       	mov	r15, r18
	
	DIO_vidSetPort(Data,Output);
 334:	61 e0       	ldi	r22, 0x01	; 1
 336:	0e 94 1b 01 	call	0x236	; 0x236 <DIO_vidSetPort>
	DIO_vidSetPinMode(RSport,RSpin,Output);
 33a:	41 e0       	ldi	r20, 0x01	; 1
 33c:	61 2f       	mov	r22, r17
 33e:	8d 2f       	mov	r24, r29
 340:	0e 94 41 00 	call	0x82	; 0x82 <DIO_vidSetPinMode>
	DIO_vidSetPinMode(Eport,Epin,Output);
 344:	41 e0       	ldi	r20, 0x01	; 1
 346:	60 2f       	mov	r22, r16
 348:	8f 2d       	mov	r24, r15
 34a:	0e 94 41 00 	call	0x82	; 0x82 <DIO_vidSetPinMode>
 34e:	8f e9       	ldi	r24, 0x9F	; 159
 350:	9f e0       	ldi	r25, 0x0F	; 15
 352:	01 97       	sbiw	r24, 0x01	; 1
 354:	f1 f7       	brne	.-4      	; 0x352 <LCD_vidInit8Bit+0x34>
 356:	00 c0       	rjmp	.+0      	; 0x358 <LCD_vidInit8Bit+0x3a>
 358:	00 00       	nop
	_delay_ms(2);
	
	LCD_vidWriteCommand(Data,RSport,RSpin,Eport,Epin,LCD_Function_8BIT_2Lines);
 35a:	0f 2e       	mov	r0, r31
 35c:	f8 e3       	ldi	r31, 0x38	; 56
 35e:	ef 2e       	mov	r14, r31
 360:	f0 2d       	mov	r31, r0
 362:	2f 2d       	mov	r18, r15
 364:	41 2f       	mov	r20, r17
 366:	6d 2f       	mov	r22, r29
 368:	8c 2f       	mov	r24, r28
 36a:	0e 94 77 01 	call	0x2ee	; 0x2ee <LCD_vidWriteCommand>
 36e:	8f ec       	ldi	r24, 0xCF	; 207
 370:	97 e0       	ldi	r25, 0x07	; 7
 372:	01 97       	sbiw	r24, 0x01	; 1
 374:	f1 f7       	brne	.-4      	; 0x372 <LCD_vidInit8Bit+0x54>
 376:	00 c0       	rjmp	.+0      	; 0x378 <LCD_vidInit8Bit+0x5a>
 378:	00 00       	nop
	
	_delay_ms(1);
	
	LCD_vidWriteCommand(Data,RSport,RSpin,Eport,Epin,LCD_DISP_ON_CURSOR_ON);
 37a:	0f 2e       	mov	r0, r31
 37c:	fe e0       	ldi	r31, 0x0E	; 14
 37e:	ef 2e       	mov	r14, r31
 380:	f0 2d       	mov	r31, r0
 382:	2f 2d       	mov	r18, r15
 384:	41 2f       	mov	r20, r17
 386:	6d 2f       	mov	r22, r29
 388:	8c 2f       	mov	r24, r28
 38a:	0e 94 77 01 	call	0x2ee	; 0x2ee <LCD_vidWriteCommand>
 38e:	8f ec       	ldi	r24, 0xCF	; 207
 390:	97 e0       	ldi	r25, 0x07	; 7
 392:	01 97       	sbiw	r24, 0x01	; 1
 394:	f1 f7       	brne	.-4      	; 0x392 <LCD_vidInit8Bit+0x74>
 396:	00 c0       	rjmp	.+0      	; 0x398 <LCD_vidInit8Bit+0x7a>
 398:	00 00       	nop
	
	_delay_ms(1);
	
	LCD_vidWriteCommand(Data,RSport,RSpin,Eport,Epin,LCD_CLEAR_SCREEN);
 39a:	ee 24       	eor	r14, r14
 39c:	e3 94       	inc	r14
 39e:	2f 2d       	mov	r18, r15
 3a0:	41 2f       	mov	r20, r17
 3a2:	6d 2f       	mov	r22, r29
 3a4:	8c 2f       	mov	r24, r28
 3a6:	0e 94 77 01 	call	0x2ee	; 0x2ee <LCD_vidWriteCommand>
 3aa:	8f ec       	ldi	r24, 0xCF	; 207
 3ac:	97 e0       	ldi	r25, 0x07	; 7
 3ae:	01 97       	sbiw	r24, 0x01	; 1
 3b0:	f1 f7       	brne	.-4      	; 0x3ae <LCD_vidInit8Bit+0x90>
 3b2:	00 c0       	rjmp	.+0      	; 0x3b4 <LCD_vidInit8Bit+0x96>
 3b4:	00 00       	nop

	_delay_ms(1);
	
	LCD_vidWriteCommand(Data,RSport,RSpin,Eport,Epin,LCD_ENTRY_MODE);
 3b6:	0f 2e       	mov	r0, r31
 3b8:	f6 e0       	ldi	r31, 0x06	; 6
 3ba:	ef 2e       	mov	r14, r31
 3bc:	f0 2d       	mov	r31, r0
 3be:	2f 2d       	mov	r18, r15
 3c0:	41 2f       	mov	r20, r17
 3c2:	6d 2f       	mov	r22, r29
 3c4:	8c 2f       	mov	r24, r28
 3c6:	0e 94 77 01 	call	0x2ee	; 0x2ee <LCD_vidWriteCommand>
	
}
 3ca:	df 91       	pop	r29
 3cc:	cf 91       	pop	r28
 3ce:	1f 91       	pop	r17
 3d0:	0f 91       	pop	r16
 3d2:	ff 90       	pop	r15
 3d4:	ef 90       	pop	r14
 3d6:	df 90       	pop	r13
 3d8:	08 95       	ret

000003da <LCD_vidWriteCharacter>:
static void LCD_vidEnablePulse(_enuPORTx Eport,_enuPINx Epin){
	DIO_vidSetPinValue(Eport,Epin,High);
	_delay_ms(2);
	DIO_vidSetPinValue(Eport,Epin,Low);
}
void LCD_vidWriteCharacter(_enuPORTx Data,_enuPORTx RSport,_enuPINx RSpin,_enuPORTx Eport,_enuPINx Epin,u8 character){
 3da:	ef 92       	push	r14
 3dc:	0f 93       	push	r16
 3de:	cf 93       	push	r28
 3e0:	df 93       	push	r29
 3e2:	d8 2f       	mov	r29, r24
 3e4:	86 2f       	mov	r24, r22
 3e6:	64 2f       	mov	r22, r20
 3e8:	c2 2f       	mov	r28, r18
	
	DIO_vidSetPinValue(RSport,RSpin,High);
 3ea:	41 e0       	ldi	r20, 0x01	; 1
 3ec:	0e 94 ae 00 	call	0x15c	; 0x15c <DIO_vidSetPinValue>
	DIO_vidWritePort(Data,character);
 3f0:	6e 2d       	mov	r22, r14
 3f2:	8d 2f       	mov	r24, r29
 3f4:	0e 94 3f 01 	call	0x27e	; 0x27e <DIO_vidWritePort>
	LCD_vidEnablePulse(Eport,Epin);
 3f8:	60 2f       	mov	r22, r16
 3fa:	8c 2f       	mov	r24, r28
 3fc:	0e 94 62 01 	call	0x2c4	; 0x2c4 <LCD_vidEnablePulse>
	
}
 400:	df 91       	pop	r29
 402:	cf 91       	pop	r28
 404:	0f 91       	pop	r16
 406:	ef 90       	pop	r14
 408:	08 95       	ret

0000040a <main>:
#define F_CPU 8000000UL
#include "util/delay.h"
int main(void)
{
    /* Replace with your application code */
	LCD_vidInit8Bit(GPIOD,GPIOC,PIN0,GPIOC,PIN1);
 40a:	01 e0       	ldi	r16, 0x01	; 1
 40c:	22 e0       	ldi	r18, 0x02	; 2
 40e:	40 e0       	ldi	r20, 0x00	; 0
 410:	62 e0       	ldi	r22, 0x02	; 2
 412:	83 e0       	ldi	r24, 0x03	; 3
 414:	0e 94 8f 01 	call	0x31e	; 0x31e <LCD_vidInit8Bit>

    while (1) 
    {
			EEPROM_voidWriteData(5,'M');
 418:	6d e4       	ldi	r22, 0x4D	; 77
 41a:	85 e0       	ldi	r24, 0x05	; 5
 41c:	90 e0       	ldi	r25, 0x00	; 0
 41e:	0e 94 4f 01 	call	0x29e	; 0x29e <EEPROM_voidWriteData>
			u8 data = EEPROM_u8ReadData(5);
 422:	85 e0       	ldi	r24, 0x05	; 5
 424:	90 e0       	ldi	r25, 0x00	; 0
 426:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <EEPROM_u8ReadData>
			LCD_vidWriteCharacter(GPIOD,GPIOC,PIN0,GPIOC,PIN1,data);
 42a:	e8 2e       	mov	r14, r24
 42c:	01 e0       	ldi	r16, 0x01	; 1
 42e:	22 e0       	ldi	r18, 0x02	; 2
 430:	40 e0       	ldi	r20, 0x00	; 0
 432:	62 e0       	ldi	r22, 0x02	; 2
 434:	83 e0       	ldi	r24, 0x03	; 3
 436:	0e 94 ed 01 	call	0x3da	; 0x3da <LCD_vidWriteCharacter>
 43a:	ee cf       	rjmp	.-36     	; 0x418 <main+0xe>

0000043c <_exit>:
 43c:	f8 94       	cli

0000043e <__stop_program>:
 43e:	ff cf       	rjmp	.-2      	; 0x43e <__stop_program>
